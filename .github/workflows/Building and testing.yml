name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with black
        run: black --check --verbose .
      - name: Test with pytest
        run: coverage run --source='.' --module pytest -v tests -lxs
      - name: Create code coverage report
        run: | 
          coverage report -m
          coverage json
      - name: Get color for badge
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            from json import dump,load
            c = load(open("coverage.json"))
            p = p = c["totals"]["percent_covered"]
            r = int(255 if p < 50 else 255 - (p - 50) / 50 * 255)
            g = int(35 + p / 50 * 164 if p < 50 else 199 - (p - 50) / 50 * 33)
            b = int(40 - p / 50 * 28 if p < 50 else 12 + (p - 50) / 50 * 88)
            color_code = "#" + hex(r * 65536 + g * 256 + b).lstrip("0x").zfill(6)
            badge = {
              "schemaVersion": 1,
              "label": "coverage",
              "message": c["totals"]["percent_covered_display"]+"%",
              "color": color_code
            }
            dump(badge,open("coverage-badge.json",'w'))
      - name: commit `coverage-badge.json` file
        id: commit
        run: |
          rm coverage.json
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add coverage-badge.json || true
          if [ -z "$(git status --porcelain)" ]; then
            echo "{name}={push}" >> $GITHUB_OUTPUT
          else
            git commit -m "Changed coverage report" -a
            echo "{name}={push}" >> $GITHUB_OUTPUT
          fi
        shell: bash
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

